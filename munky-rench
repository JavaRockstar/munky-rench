#!/bin/bash
#
#
#
#
# Munky-rench is the swiss army knife for apk modding in bash
# Licensed under GPL


DESC="Munky Rench is the swiss-army knife of apk modding in Linux"
VERSION="VERSION 1.0 INITIAL RELEASE"



#
echo
echo " ----miketheinkman---miketheinkman---miketheinkman----"
echo
echo "   MM       MM  U      U  N      N   K   K   Y     Y "
echo "   M M     M M  U      U  NN     N   K  K    Y     Y "
echo "   M  M   M  M  U      U  N N    N   KKK      Y   Y  " 
echo "   M   M M   M  U      U  N  N   N   K  K      Y Y   "  
echo "   M    M    M  U      U  N   N  N   K   K      Y    "
echo "   M         M   U    U   N    N N   K    K     Y    "
echo "   M         M    UUUU    N     NN   K     K    Y    "
echo "                                                      "
echo " ----RENCH---RENCH---RENCH---RENCH---RENCH---RENCH----" 
echo                                          
echo $VERSION  
echo
echo $DESC
echo
echo "ENTER to continue"

read

echo
echo
echo "                     APK MUNKY-BUSINESS "
echo "------------------------------------------------------------"

#frameworks
if [ ! -d "~/android/munky-rench/frameworks" ]

	then  
		mkdir ~/android/munky-rench/frameworks



#place-here-for-modding
if [ ! -d "~/android/munky-rench/place-here-for-modding" ]

	then 
 		mkdir ~/android/munky-rench/place-here-for-modding



#zipalign
if [ ! -d "~/android/munky-rench/zipalign" ]

	then 
		 mkdir ~/android/munky-rench/zipalign



#sign
if [ ! -d "~/android/munky-rench/sign" ]

	then 
		 mkdir ~/android/munky-rench/sign

#theme
if [ ! -d "~/android/munky-rench/theme-projects" ]

	then

		mkdir ~/android/munky-rench/theme-projects

		
		fi
			fi
				fi
					fi
						fi
	


#choices
echo
echo
echo "---------------------MUNKY BUSINESS--------------------------"
echo "-------------------------------------------------------------"
echo
echo
echo


echo

echo "1)unzip apk for theming" # functional


echo "2)zip themed apk" # functional


echo "3)install frameworks - important for recompiling!!!" # test

echo "4)decompile apk for modding" # functional


echo "5)recompile" # functional


echo "6)sign apk" 


echo "7)zipalign"


echo "8)recompile as system app- will not change signature"


echo "9)install app - requires adb"

echo "89)help and about" 

                                                                               
echo "99)exit" 


echo
echo
echo "------------------------------------------------------------"
echo
echo "pick your munky business"


read n

	case $n in


	
	1) # UNZIP
	
	echo
	echo
	echo
	echo "Unzipping an apk allows for the replacement of images,"
	echo "but does not allow for modification of code."
	echo
	echo "After replacing images, you must re-zip."
	echo
	echo "For more info, select 'help' from 'munky menu'"
	echo
	echo "press ENTER to continue"
	echo
	
	read

             cd ~/android/munky-rench/place-here-for-modding

		ls | cat -n

			echo
				
				echo
  

			echo "Which file? Enter number of selection or 'x' to exit"

				read choice


		
		
			
			if [ $choice = 'x' ]  ; then 
	
		
					echo "are you sure? Press ENTER to exit"
			
						read
			
							exit

			
				else	
			
					cd ~/android/munky-rench/place-here-for-modding
	

						OUTPUTS=`ls | sed -n $choice'p' `	



			
			unzip ~/android/munky-rench/place-here-for-modding/$OUTPUTS -d ~/android/munky-rench/theme-projects/$OUTPUTS

											
										


				echo
				echo
				echo
				echo "--------------------------------------------------------------"
				echo						 			
				echo "Unzipped files in 'theme' directory. You can now replace images for customization "
				echo "ENTER to return to munky menu"

				read

		
		fi
	
				cd ~/android/munky-rench

				
					./munky-rench ;;


	2)  # ZIP APK
	
		echo
		echo
		echo
		echo "Zipping an apk simply repackages the files from"
		echo "an unzipped apk into a useable form."
		echo
		echo "Is not a substitute for compiling apk"
		echo
		echo "After zipping, apk is ready to install."
		echo
		echo "For more info, select 'help' from 'munky menu'"
		echo
		echo "press ENTER to continue"
		echo	
		read
	
			 cd ~/android/munky-rench/theme-projects

		ls | cat -n

			echo
				
				echo
  

			echo "Which file? Enter number of selection or 'x' to exit"

				read choice


		
		
			
			if [ $choice = 'x' ]  ; then 
	
		
					echo "are you sure? Press ENTER to exit"
			
						read
			
							exit

			
				else	
	

						OUTPUTS=`ls | sed -n $choice'p' `	



				
	
							mv $OUTPUTS temp

							cd temp
	
	
									zip -r -0 $OUTPUTS *
	
										mv $OUTPUTS themed_$OUTPUTS

											
										mv -f themed_$OUTPUTS ~/android/munky-rench/out


				echo
				echo
				echo
				echo "--------------------------------------------------------------"
				echo						 			
				echo "themed apk in 'out' directory. Enjoy your new theme"
				echo "ENTER to return to munky menu"

				read

		
		fi
	
				cd ~/android/munky-rench/theme-projects

					rm -Rf temp
		
					cd ~/android/munky-rench

				
					./munky-rench ;;

	3) # INSTALL FRAMEWORK
	
	
		echo
		echo
		echo
		echo "Apks are designed to run within the existing"
		echo "framework of Android.  You must install the framework-res.apk"
		echo "from the /system/framework folder of your device."
		echo
		echo "Non AOSP roms usually have a proprietary framework also."
		echo "The location of these second frameworks will vary."
		echo
		echo "For more info, select 'help' from 'munky menu'"
		echo
		echo "press ENTER to continue"
		echo
		read
	
		cd ~/android/munky-rench/frameworks	
			
		ls | cat -n

			echo
				
				echo
  

			echo "Which file? Enter number of selection or 'x' to exit"

				read choice


		
		
			
			if [ $choice = 'x' ]  ; then 
	
		
					echo "are you sure? Press ENTER to exit"
			
						read
			
							exit

			
				else	
	

						OUTPUTS=`ls | sed -n $choice'p' `	



				
	
						apktool if $OUTPUTS

				echo
				echo
				echo
				echo "--------------------------------------------------------------"
				echo						 			
				echo "Repeat process to add other frameworks "
				echo "ENTER to return to munky menu"

				read

		
		fi
	
				cd ~/android/munky-rench

				
					./munky-rench ;;


	4) # DECOMPILE
	
		echo
		echo
		echo
		echo "Decompiling an apk reduces it to its editable source."
		echo "You can change the behavior and features of the app,"
		echo "IF you know what you are doing."
		echo
		echo "Java and Xml are the languages you will need to edit source."
		echo
		echo "For more info, select 'help' from 'munky menu'"
		echo
		echo "press ENTER to continue"
		echo	
		read
	
		cd ~/android/munky-rench/place-here-for-modding

		ls | cat -n

			echo
				
				echo
  

			echo "Which file? Enter number of selection or 'x' to exit"

				read choice


		
		
			
			if [ $choice = 'x' ]  ; then 
	
		
					echo "are you sure? Press ENTER to exit"
			
						read
			
							exit

			
				else	
			
					cd ~/android/munky-rench/place-here-for-modding
	

						OUTPUTS=`ls | sed -n $choice'p' `	



							apktool d $OUTPUTS  ~/android/munky-rench/mod-projects/$OUTPUTS

											
								


				echo
				echo
				echo
				echo "--------------------------------------------------------------"
				echo						 			
				echo "Decompiled files in 'mod' directory. You can now replace images and edit or add code "
				echo "ENTER to return to munky menu"

				read

		
		fi
	
				cd ~/android/munky-rench

				
					./munky-rench ;;

	5) # RECOMPILE
	
	
		echo
		echo
		echo
		echo "This will compile the source into byte code."
		echo "The app will not be ready to install until you sign it."
		echo
		echo "For more info, select 'help' from 'munky menu'"
		echo
		echo "press ENTER to continue"
		echo	
		read
	
		cd ~/android/munky-rench/mod-projects

		ls | cat -n

			echo
				
				echo
  

			echo "Which file? Enter number of selection or 'x' to exit"

				read choice


		
		
			
			if [ $choice = 'x' ]  ; then 
	
		
					echo "are you sure? Press ENTER to exit"
			
						read
			
							exit

			
				else	
	

						OUTPUTS=`ls | sed -n $choice'p' `	



							apktool b $OUTPUTS  ~/android/munky-rench/out/$OUTPUTS


						mv ~/android/munky-rench/out/$OUTPUTS  ~/android/munky-rench/out/unsigned_$OUTPUTS



											
								


				echo
				echo
				echo
				echo "--------------------------------------------------------------"
				echo						 			
				echo "unsigned apk in 'out' directory. Sign and zipalign apk before install "
				echo "ENTER to return to munky menu"

				read

		
		fi
	
				cd ~/android/munky-rench

			
					./munky-rench ;;
	
	6)

				echo
		echo
		echo
		echo "This will sign the apk"
		echo "The app will be ready to install after you sign it."
		echo
		echo "For more info, select 'help' from 'munky menu'"
		echo
		echo "press ENTER to continue"
		echo	
		read
	
		cd ~/android/munky-rench/out

		ls | cat -n

			echo
				
				echo
  

			echo "Which file? Enter number of selection or 'x' to exit"

				read choice


		
		
			
			if [ $choice = 'x' ]  ; then 
	
		
					echo "are you sure? Press ENTER to exit"
			
						read
			
							exit

			
				else	
	

						OUTPUTS=`ls | sed -n $choice'p' `	



							cd ~/android/munky-rench/TOOLS


						java -jar signapk.jar testkey.x509.pem /home/mike/android/munky-rench/TOOLS/testkey.pk8 ~/android/munky-rench/out/$OUTPUTS ~/android/munky-rench/out/signed_$OUTPUTS



											
								


				echo
				echo
				echo
				echo "--------------------------------------------------------------"
				echo						 			
				echo "signed apk in 'out' directory. Sign and zipalign apk before install "
				echo "ENTER to return to munky menu"

				read

		
		fi
	
				cd ~/android/munky-rench

			
					./munky-rench ;;
			


	7) # ZIPALIGN
	
	
	
		echo "place apk to be zipaligned in 'zipalign' directory"
		
		echo "press ENTER when ready"	

			read	
		

		cd ~/android/munky-rench/zipalign

		ls | cat -n

			echo
				
				echo
  

			echo "Which file? Enter number of selection or 'x' to exit"

				read choice


		
		
			
			if [ $choice = 'x' ]  ; then 
	
		
					echo "are you sure? Press ENTER to exit"
			
						read
			
							exit

			
				else	
	

						OUTPUTS=`ls | sed -n $choice'p' `
						
							

					cd ~/android/munky-rench/TOOLS

				./zipalign 4 ~/android/munky-rench/zipalign/$OUTPUTS ~/android/munky-rench/out/zipaligned_$OUTPUTS			

				
						



											
								


				echo
				echo
				echo
				echo "--------------------------------------------------------------"
				echo						 			
				echo "zipaligned apk in 'out' directory. "
				echo "ENTER to return to munky menu"

				read

		
		fi
	
				cd ~/android/munky-rench

			
					./munky-rench ;;
	


        8) # COMPILE AS SYSTEM APP
        
        				echo
		echo
		echo
		echo "Compiles apk using original META_INF."
		
		
		echo
		echo "For more info, select 'help' from 'munky menu'"
		echo
		echo "press ENTER to continue"
		echo	
		read
        
		cd ~/android/munky-rench/mod-projects

		ls | cat -n

			echo
				
				echo
  

			echo "Which file? Enter number of selection or 'x' to exit"

				read choice


		
		
			
			if [ $choice = 'x' ]  ; then 
	
		
					echo "are you sure? Press ENTER to exit"
			
						read
			
							exit

			
				else	
	

						OUTPUTS=`ls | sed -n $choice'p' `	



							apktool b $OUTPUTS  ~/android/munky-rench/out/$OUTPUTS

#unzip compiled apk to staging
							unzip ~/android/munky-rench/out/$OUTPUTS -d ~/android/munky-rench/staging/

#copy original to keep
					cp ~/android/munky-rench/place-here-for-modding/$OUTPUTS ~/android/munky-rench/$OUTPUTS

#unzip original		

							unzip ~/android/munky-rench/$OUTPUTS -d ~/android/munky-rench/keep/
			
#copy meta to staging
				 cd ~/android/munky-rench/keep/

							 mv META-INF ~/android/munky-rench/staging/META-INF



				cd ~/android/munky-rench/staging
#zip staging				 
				 	zip -r -0 $OUTPUTS *
				 	
				 		mv $OUTPUTS ~/android/munky-rench/out/system_$OUTPUTS

							cd ~/android/munky-rench/out
								rm $OUTPUTS
							
								cd ~/android/munky-rench
	
								rm -Rf keep

								rm -Rf staging

								rm $OUTPUTS

			

											
								


				echo
				echo
				echo
				echo "--------------------------------------------------------------"
				echo						 			
				echo "Compiled SYSTEM apk in 'out' directory."
				echo "ENTER to return to munky menu"

				read

		
		fi
	
				cd ~/android/munky-rench

				rmdir staging

				
					./munky-rench ;;


	9)

			echo
		echo
		echo
		echo "This will install selected apk to your device."
		echo "Does not work for system apps"
		echo
		echo "For more info, select 'help' from 'munky menu'"
		echo
		echo "press ENTER to continue"
		echo	
		read
	
		cd ~/android/munky-rench/mod-projects

		ls | cat -n

			echo
				
				echo
  

			echo "Which file? Enter number of selection or 'x' to exit"

				read choice


		
		
			
			if [ $choice = 'x' ]  ; then 
	
		
					echo "are you sure? Press ENTER to exit"
			
						read
			
							exit

			
				else	
	

						OUTPUTS=`ls | sed -n $choice'p' `	



							adb install $OUTPUTS


											
								


				echo
				echo
				echo
				echo "--------------------------------------------------------------"
				echo						 			
				echo "app installed."
				echo "ENTER to return to munky menu"

				read

		
		fi
	
				cd ~/android/munky-rench

			
					./munky-rench ;;
  

89)

			
			
			echo
			echo
			echo
			echo

		echo "When I made the switch to linux, I noticed that almost everything assumed some"
		echo "level of expertise. Program A assumed familiarity with bash, Program B assumed"
		echo "I knew how to add something to my PATH. The problem was, I didn't know anything."
		echo "I knew enough to switch to linux, but not enough to use it. I knew that I had a"
		echo "lot to learn, but I wanted to tinker with Apks RITE NAO!!!"
		echo
		echo "What I am trying to do with this tool is provide a stop-gap program for noobs so"
		echo "they can tinker with apks before they really understand the process. There are so"
		echo "many stand-alones in windows for this type of thing, but the ones in linux have many"
		echo "dependencies, that it sets the learning curve a little higher. I just want to help"
		echo "people adjust to modding in linux in a graduated way, while still providing a useful"
		echo "tool for more experienced users that don't want to type the same command fifteen"
		echo "times"
		echo
		echo
		echo
		echo "ENTER to continue"
read
echo
	echo
		echo " ----miketheinkman---miketheinkman---miketheinkman----"
		echo
		echo "   MM       MM  U      U  N      N   K   K   Y     Y "
		echo "   M M     M M  U      U  NN     N   K  K    Y     Y "
		echo "   M  M   M  M  U      U  N N    N   KKK      Y   Y  " 
		echo "   M   M M   M  U      U  N  N   N   K  K      Y Y   "  
		echo "   M    M    M  U      U  N   N  N   K   K      Y    "
		echo "   M         M   U    U   N    N N   K    K     Y    "
		echo "   M         M    UUUU    N     NN   K     K    Y    "
		echo "                                                      "
		echo " ----RENCH---RENCH---RENCH---RENCH---RENCH---RENCH----"
		
	 esac
	 
	 read
	
echo	
echo	
echo	
echo

echo "       8    8  88888  8      88888.          "
echo "       8____8  8__    8      8     8         "
echo "       8    8  8      8      88888'          "
echo "       8    8  88888  88888  8               "
	 
echo
echo
echo
echo "1)zip/unzip" # 7za explanation


echo "2)apktool" # 


echo "3)signapk" # 


echo "4)zipalign" # 


echo "5)why linux is better for modding" 


	read n
	
case $n in 
	
	
	1)
	
	echo
	echo
	echo
	echo
	
	echo "        8888888  888  88888.       "
	echo "           .8'    8   8     8      "
	echo "         .8'      8   88888'        "
	echo "        8888888  888  8          "
	
	
	echo "Unzipping apks for theming is done to avoid having to resign the apk before install. An unzipped app is not nearly as customizable as a decompiled app. Only the images can be changed."
	echo
	echo "When compiling as a system app, unzipping is also used to copy the META_INF and AndroidManifest.xml from the original apk to the new apk. This preserves the original signature, which is important, because a system app with the wrong signature will not work, resulting in bootloops, and force close loops"
	
	read
	
	./munky-rench

			;; 
			
	2)
		
	echo
	echo
	echo
	echo
	
	echo "          8     8888   8  _8  88888  888    888   8              " 
	echo "         8 8    8   8  888_     8   8   8  8   8  8                "
	echo "        8___8   888'   8   8    8   8   8  8   8  8                "  
	echo "       8     8  8      8    8   8    888    888   8888              "
	
	
	echo "Apktool unpacks apks from the byte code used by the compiler into the source code used by the developer, allowing you to make edits in smali files that will change the functionality of an app, or xml files that will change the appearance."
	echo
	echo "Smali/Baksmali means assemble/disassemble in Icelandic and is named that way due to the Dalvik virtual machine being named after an Icelandic fishing village. If you are not familiar with Smali, You are probably going to break your apk. That is fine, we learn through our mistakes, but always save a copy of the original and be prepared to reflash if you bootloop."
	echo
	echo "Xml is a markup language, similar to HTML in that it controls how information is displayed. Xml files have color information, app name, and pretty much any text throughout the app. For instance, values/colors.xml contains color info. Xml can break the apk also, so don't make too many changes without testing.,"
	

                ./munky-rench

			;; 
			
			esac
			
		./munky-rench

			;;    
	



	99)


		exit ;;



esac

read 



exit 0
